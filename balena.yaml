name: agent
description: >-
  Kerberos Agent is a cutting edge video surveillance management system 
  made available as Open Source under the MIT License
version: 3.0.0
type: sw.block
assets:
  repository:
    type: blob.asset
    data:
      url: 'https://github.com/kerberos-io/agent'
  logo:
    type: blob.asset
    data:
      url: >-
        https://raw.githubusercontent.com/kerberos-io/balena-agent/master/logo.png
data:
  defaultDeviceType: raspberrypi3
  supportedDeviceTypes:
    - raspberrypi4-64
    - fincm3
    - raspberrypi3
    - raspberrypi3-64
    - raspberrypi400-64
    - intel-nuc
    - genericx86-64-ext
post-provisioning: >-

  Kerberos.io is a cutting edge modular video surveillance system, made available as Open Source under the MIT License, with a strong focus on user experience, scalability, resilience, extension and integration.

  # How it works: A world of Agents üïµüèº‚Äç‚ôÇÔ∏è

  Kerberos.io applies the concept of agents. An agent is running next to or on your camera, and is processing a single camera feed. It applies motion based recording and make those recordings available through a user friendly web interface. Kerberos Agent allows you to connect to other cloud services or custom applications. Kerberos Agent is perfect for personal usage and/or is a great tool if you only have a couple of surveillance cameras to be processed.

  If you are looking for a solution that scales better with your video surveillance and/or video analytics requirements, [Kerberos Enterprise Suite might be a better fit](https://doc.kerberos.io/enterprise/first-things-first).

  # The most important features

  - Low memory and CPU usage.

  - Simplified and modern user interface.

  - Multi architecture (ARMv7, ARMv8, amd64, etc).

  - Multi camera support: IP Cameras (H264), USB cameras and Raspberry Pi Cameras [through a RTSP proxy](https://github.com/kerberos-io/camera-to-rtsp).

  - Single camera per instance (e.g. one container per camera).

  - Primary and secondary stream setup (record full-res, stream low-res).

  - Low resolution streaming through MQTT and full resolution streaming through WebRTC.

  - Ability to specifiy conditions: offline mode, motion region, time table, continuous recording, etc.

  - Post- and pre-recording on motion detection.

  - Ability to create fragmented recordings, and streaming though HLS fMP4.

  - Deploy where you want with the tools you use: docker, docker compose, ansible, terraform, kubernetes, balena, etc.

  - Cloud storage/persistance: Kerberos Hub, Kerberos Vault and Dropbox. [(WIP: Minio, Storj, Google Drive, FTP etc.)](https://github.com/kerberos-io/agent/issues/95)

  - WIP: Integrations (Webhooks, MQTT, Script, etc).

  - REST API access and documentation through Swagger (trigger recording, update configuration, etc).
  
  - MIT License

  # How to run this block

  Simple click on the Use button, and copy-paste the service into your application manifest. Once done you can benefit from some awesome Kerberos Agent features!